#!/usr/bin/with-contenv bash

print_vars () {
    if [ -n "${1}" ]; then
	title=" ${1}"
    else
	title=""
    fi
    echo "Environment${title}:"
    echo "    PUID=${PUID}"
    echo "    PGID=${PGID}"
    echo "    TZ=${TZ}"
    for var in "${!MMONIT_@}"; do
	printf '    %s=%s\n' "$var" "${!var}"
    done    
}

print_vars 

# load env file if it exists
if [ -f "/config/env" ]; then
  source /config/env
  print_vars "After sourcing /config/env"
fi

# Copy our dist to /config
test -d /config/mmonit-${MMONIT_VERSION} || rsync -avq /opt/mmonit-${MMONIT_VERSION} /config/

# Link log files
(
    cd /config &&
	rm -rf logs &&
	ln -s mmonit-${MMONIT_VERSION}/logs .
)

# Fix syntax errors in server.xml
xmlstarlet validate /config/mmonit-${MMONIT_VERSION}/conf/server.xml > /dev/null
if [ $? -ne 0 ]; then
    echo "Escaping & in XML"
    sed -i -E -e 's/&[^#]/\&#38;/g' /config/mmonit-${MMONIT_VERSION}/conf/server.xml
    xml_fixup=yes
else
    xml_fixup=no
fi

# Update license owner
if [ -n "${MMONIT_LICENSE_OWNER}" ]; then
    echo Setting M/Monit license owner
    xmlstarlet edit --inplace -u "/License/@owner" -v "${MMONIT_LICENSE_OWNER}" /config/mmonit-${MMONIT_VERSION}/conf/license.xml
fi

# Update License value
if [ -n "${MMONIT_LICENSE_KEY}" ]; then
    echo Setting M/Monit license key
    xmlstarlet edit --inplace -u "/License" -v "${MMONIT_LICENSE_KEY}" /config/mmonit-${MMONIT_VERSION}/conf/license.xml
fi

# Update DM connector
if [ -n "${MMONIT_DATABASE_URL}" ]; then
    echo Setting database URL
    xmlstarlet edit --inplace -u "/Server/Service/Engine/Realm/@url" -v "${MMONIT_DATABASE_URL}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# minimum number of database connections to keep open
if [ -n "${MMONIT_DATABASE_MIN_CON}" ]; then
    echo Setting database pool minimum connections count
    xmlstarlet edit --inplace -u "/Server/Service/Engine/Realm/@minConnections" -v "${MMONIT_DATABASE_MIN_CON}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# maximum number of database connections to use
if [ -n "${MMONIT_DATABASE_MAX_CON}" ]; then
    echo Setting database pool maximum connenction count
    xmlstarlet edit --inplace -u "/Server/Service/Engine/Realm/@maxConnections" -v "${MMONIT_DATABASE_MAX_CON}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# Update http connector to add explicit "proxyScheme" if http scheme differs between reverse proxy and m/monit connector
if [ -n "${MMONIT_PROXY_SCHEME}" ]; then
    echo Setting frontend proxy server scheme
    xmlstarlet edit --inplace -a "/Server/Service/Connector" -t attr -n proxyScheme -v "${MMONIT_PROXY_SCHEME}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# set explicit host name as used by frontend reverse proxy to create correct redirects
if [ -n "${MMONIT_PROXY_NAME}" ]; then
    echo Setting frontend proxy server dns name
    xmlstarlet edit --inplace -a "/Server/Service/Connector" -t attr -n proxyName -v "${MMONIT_PROXY_NAME}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# set explicit http port as used by frontend reverse proxy to create correct redirects
if [ -n "${MMONIT_PROXY_PORT}" ]; then
    echo Setting frontend proxy server port
    xmlstarlet edit --inplace -a "/Server/Service/Connector" -t attr -n proxyPort -v "${MMONIT_PROXY_PORT}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# Set session timeout (default 1800s)
if [ -n "${MMONIT_SESSION_TIMEOUT}" ]; then
    echo Setting session timeout
    xmlstarlet edit --inplace -u "/Server/Service/Engine/Host/Context/@sessionTimeout" -v "${MMONIT_SESSION_TIMEOUT}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi


if [ -n "${MMONIT_TLS_VERSION}" ]; then
    echo Setting TLS version
    xmlstarlet edit --inplace \
	       -u "/Server/Service/Engine/Host/@tls" -v "${MMONIT_TLS_VERSION}" \
	       -i "/Server/Service/Engine/Host[not(@tls)]" --type attr -n tls -v "${MMONIT_TLS_VERSION}" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
else
    echo Unsetting TLS version
    xmlstarlet edit --inplace -d "/Server/Service/Engine/Host/@tls" /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# Set nprocessors based on CPU count https://mmonit.com/wiki/MMonit/FAQ#scaling
nprocessors=$(nproc --all)
test ${nprocessors} -lt 10 && nprocessors=10
xmlstarlet edit --inplace -u "/Server/Service/Connector/@processors" -v ${nprocessors} /config/mmonit-${MMONIT_VERSION}/conf/server.xml

# Restore the fixups
if [ "${xml_fixup}" = "yes" ]; then
    echo "Restoring escaped & in XML"
    sed -i -E -e 's/&#38;/\&/g' /config/mmonit-${MMONIT_VERSION}/conf/server.xml
fi

# XMLstarlet likes to use &amp; put it back
sed -i -E -e 's/&amp;/\&#38;/g' /config/mmonit-${MMONIT_VERSION}/conf/server.xml

# XXX - Cron, logrotate

# permissions
chown -R abc:abc \
	/config \
	/opt/mmonit-${MMONIT_VERSION}
